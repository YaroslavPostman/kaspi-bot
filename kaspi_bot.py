import requests
import datetime
import pytz
import json
import os

# ‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")
KASPI_API_URL = os.getenv("KASPI_API_URL")

# üïê –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –≤ KZT
tz = pytz.timezone("Asia/Almaty")
current_time = datetime.datetime.now(tz)
formatted_time = current_time.strftime("%Y-%m-%d %H:%M:%S")

# üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
def get_orders():
    try:
        response = requests.get(KASPI_API_URL)
        if response.status_code == 200:
            return response.json()
        else:
            return {"error": f"Status code: {response.status_code}"}
    except Exception as e:
        return {"error": str(e)}

# üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
def send_telegram_message(text):
    url = f"https://api.telegram.org/bot{TOKEN}/sendMessage"
    payload = {"chat_id": CHAT_ID, "text": text, "parse_mode": "HTML"}
    requests.post(url, data=payload)

# üß† –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
def main():
    orders_data = get_orders()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫
    if "error" in orders_data:
        send_telegram_message(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤: {orders_data['error']}")
        return

    orders = orders_data.get("orders", [])
    total = len(orders)

    # ‚ö†Ô∏è –û—Ç–ª–∞–¥–∫–∞: —Å–∫–æ–ª—å–∫–æ –∑–∞–∫–∞–∑–æ–≤
    debug_text = f"üõí [v3.6-debug] –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {total}\n–í—Ä–µ–º—è: {formatted_time} (KZT)"
    send_telegram_message(debug_text)

    # ‚ö†Ô∏è –ï—Å–ª–∏ –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç ‚Äî –æ—Ç–ø—Ä–∞–≤–∏–º –∫–∞–∫ –∏ —Ä–∞–Ω—å—à–µ
    if total == 0:
        send_telegram_message(f"‚ùå [v3.6] –ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ —Å–±–æ—Ä–∫—É. –í—Ä–µ–º—è: {formatted_time} (KZT)")
        return

    # üßæ –û—Ç–ø—Ä–∞–≤–∏–º –ø–µ—Ä–≤—ã–µ 3 –∑–∞–∫–∞–∑–∞ –∫–∞–∫ json (—Å–æ–∫—Ä–∞—â—ë–Ω–Ω–æ)
    preview = json.dumps(orders[:3], indent=2, ensure_ascii=False)
    send_telegram_message(f"<pre>{preview}</pre>")

    # ‚õèÔ∏è –¢—É—Ç –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É –ø–æ —Ü–≤–µ—Ç—É/—Ä–∞–∑–º–µ—Ä—É, –∫–∞–∫ –≤ —Å—Ç–∞—Ä–æ–π –≤–µ—Ä—Å–∏–∏
    # –ù–∞–ø—Ä–∏–º–µ—Ä: group_and_send(orders)

if __name__ == "__main__":
    main()
